<local:GenericRepositoryPublishControl x:Class="GitHub.VisualStudio.UI.Views.Controls.RepositoryPublishControl"
                                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                       xmlns:cache="clr-namespace:GitHub.VisualStudio.Helpers"
                                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                       xmlns:helpers="clr-namespace:GitHub.Helpers;assembly=GitHub.UI"
                                       xmlns:local="clr-namespace:GitHub.VisualStudio.UI.Views.Controls"
                                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                       xmlns:prop="clr-namespace:GitHub.VisualStudio.UI;assembly=GitHub.VisualStudio.UI"
                                       xmlns:sampleData="clr-namespace:GitHub.SampleData;assembly=GitHub.App"
                                       xmlns:ui="clr-namespace:GitHub.UI;assembly=GitHub.UI"
                                       xmlns:uirx="clr-namespace:GitHub.UI;assembly=GitHub.UI.Reactive"
                                       Margin="0"
                                       d:DesignHeight="440"
                                       d:DesignWidth="414"
                                       Background="{DynamicResource GitHubVsToolWindowBackground}"
                                       mc:Ignorable="d">

  <d:DesignProperties.DataContext>
    <Binding>
      <Binding.Source>
        <sampleData:RepositoryPublishViewModelDesigner />
      </Binding.Source>
    </Binding>
  </d:DesignProperties.DataContext>

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <cache:SharedDictionaryManager Source="pack://application:,,,/GitHub.VisualStudio;component/SharedDictionary.xaml" />
        <cache:SharedDictionaryManager Source="pack://application:,,,/GitHub.UI;component/SharedDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <Style BasedOn="{StaticResource VSStyledComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0,0,0,8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="23" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <StackPanel Margin="8,6,18,0"
              Orientation="Vertical"
              Style="{DynamicResource DialogContainerStackPanel}">

    <DockPanel Margin="0,0,0,13" VerticalAlignment="Top">
      <ui:OcticonImage x:Name="octokit"
                       Width="32"
                       Height="32"
                       Margin="0,6,8,0"
                       VerticalAlignment="Center"
                       DockPanel.Dock="Left"
                       Foreground="{DynamicResource GitHubVsToolWindowText}"
                       Icon="mark_github" />
      <Border Height="32"
              Margin="0,6,0,0"
              DockPanel.Dock="Right">
        <TextBlock HorizontalAlignment="Stretch"
                   VerticalAlignment="Center"
                   Foreground="{DynamicResource GitHubVsGrayText}"
                   Text="{x:Static prop:Resources.RepoDoesNotHaveRemoteText}"
                   TextTrimming="CharacterEllipsis"
                   TextWrapping="Wrap"
                   ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
      </Border>
    </DockPanel>

    <ComboBox x:Name="hostsComboBox"
              ItemsSource="{Binding Connections, Mode=OneWay}"
              SelectedItem="{Binding SelectedConnection}">
      <ComboBox.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding HostAddress.Title}" />
          </StackPanel>
        </DataTemplate>
      </ComboBox.ItemTemplate>
    </ComboBox>

    <ComboBox x:Name="accountsComboBox"
              ItemsSource="{Binding Accounts, Mode=OneWay}"
              SelectedItem="{Binding SelectedAccount}">
      <ComboBox.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <Image Width="15"
                   Height="15"
                   Margin="0,0,8,0"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   Source="{Binding Avatar}" />
            <TextBlock Text="{Binding Login}" />
          </StackPanel>
        </DataTemplate>
      </ComboBox.ItemTemplate>
    </ComboBox>

    <Grid>
      <TextBox x:Name="nameText"
               Height="23"
               Margin="0"
               Background="{DynamicResource GitHubVsSearchBoxBackground}"
               Foreground="{DynamicResource GitHubVsWindowText}"
               MaxLength="{x:Static cache:Constants.MaxRepositoryNameLength}"
               Text="{Binding RepositoryName}" />

      <TextBlock Margin="7,4,0,0"
                 Foreground="{DynamicResource GitHubVsGrayText}"
                 IsHitTestVisible="False"
                 Text="{x:Static prop:Resources.RepoNameText}"
                 Visibility="{Binding ElementName=nameText, Path=Text.Length, Converter={ui:CountToVisibilityConverter}}" />
    </Grid>

    <Grid>
      <TextBox x:Name="description"
               Height="52"
               Margin="0,8,0,0"
               AcceptsReturn="True"
               Background="{DynamicResource GitHubVsSearchBoxBackground}"
               Foreground="{DynamicResource GitHubVsWindowText}"
               Text="{Binding Description}"
               TextWrapping="WrapWithOverflow" />

      <TextBlock Margin="7,12,0,0"
                 Foreground="{DynamicResource GitHubVsGrayText}"
                 IsHitTestVisible="False"
                 Text="{x:Static prop:Resources.DescriptionOptional}"
                 Visibility="{Binding ElementName=description, Path=Text.Length, Converter={ui:CountToVisibilityConverter}}" />
    </Grid>

    <CheckBox x:Name="makePrivate"
              Margin="0,8,0,0"
              IsChecked="{Binding KeepPrivate}"
              IsEnabled="{Binding CanKeepPrivate}"
              Style="{StaticResource VSStyledCheckBox}">
      <TextBlock Background="{DynamicResource GitHubVsToolWindowBackground}"
                 Foreground="{DynamicResource GitHubVsToolWindowText}"
                 TextWrapping="Wrap">
        <TextBlock.Resources>
          <Style TargetType="{x:Type TextBlock}">
            <Style.Triggers>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Resources>
        <TextBlock.Inlines>
          <Run Text="{x:Static prop:Resources.makePrivateContent}" />
        </TextBlock.Inlines>
      </TextBlock>
    </CheckBox>

    <Button x:Name="publishRepositoryButton"
            Margin="0,8,0,0"
            HorizontalAlignment="Left"
            IsDefault="True"
            Style="{StaticResource VSStyledButton}">
      <TextBlock Text="{x:Static prop:Resources.publishText}" />
    </Button>

  </StackPanel>
</local:GenericRepositoryPublishControl>
